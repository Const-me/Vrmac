// This file is generated by a T4 template.
namespace Vrmac.Draw
{
	public partial struct IntMatrix
	{
		// Values in all 8 rotation matrices: 1 signed byte / value, 2 * 2 = 4 values / matrix
		static readonly MatrixValues[] allMatrices = new MatrixValues[ 8 ]
		{
			new MatrixValues( 1, 0, 0, 1 ),
			new MatrixValues( 0, -1, 1, 0 ),
			new MatrixValues( -1, 0, 0, -1 ),
			new MatrixValues( 0, 1, -1, 0 ),
			new MatrixValues( -1, 0, 0, 1 ),
			new MatrixValues( 0, -1, -1, 0 ),
			new MatrixValues( 1, 0, 0, -1 ),
			new MatrixValues( 0, 1, 1, 0 )
		};

		// Index = left hand side matrix, each value contains 3 bits per right hand side matrix
		static readonly uint[] multiplyTable = new uint[ 8 ]
		{
			0xfac688, 0x9f50d1, 0xb3e21a, 0xd67443, 0x298bbc, 0x4c1de5, 0x60af2e, 0x53977
		};

		// The value contains 3 bits per matrix, 24 bits in total
		const uint invertTable = 0xfac298;

		// Names of these matrices, useful for debugging
		static readonly string[] matrixNames = new string[ 8 ]
		{
			"identity", "rotate 90°", "rotate 180°", "rotate 270°", "flip", "flip + rotate 90°", "flip + rotate 180°", "flip + rotate 270°"
		};
	}
}