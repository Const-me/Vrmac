// This C# source file has been generated by a T4 template.
namespace VrmacVideo.Containers.HEVC
{
	static class ScanOrder
	{
		// Specified in 6.5.3 "Up-right diagonal scan order array initialization process", page 30 of the spec.
		// We run that function offline in compile time for 4x4 and 8x8 blocks (the code is C# in a T4 template), cache values in byte arrays.

		/// <summary>4x4 diagonal scan, X coordinates</summary>
		public static readonly byte[] diagonalScan_4x4_x = new byte[ 16 ]
		{
			0, 0, 1, 0,
			1, 2, 0, 1,
			2, 3, 1, 2,
			3, 2, 3, 3
		};

		/// <summary>4x4 diagonal scan, Y coordinates</summary>
		public static readonly byte[] diagonalScan_4x4_y = new byte[ 16 ]
		{
			0, 1, 0, 2,
			1, 0, 3, 2,
			1, 0, 3, 2,
			1, 3, 2, 3
		};
		
		/// <summary>8x8 diagonal scan, X coordinates</summary>
		public static readonly byte[] diagonalScan_8x8_x = new byte[ 64 ]
		{
			0, 0, 1, 0, 1, 2, 0, 1,
			2, 3, 0, 1, 2, 3, 4, 0,
			1, 2, 3, 4, 5, 0, 1, 2,
			3, 4, 5, 6, 0, 1, 2, 3,
			4, 5, 6, 7, 1, 2, 3, 4,
			5, 6, 7, 2, 3, 4, 5, 6,
			7, 3, 4, 5, 6, 7, 4, 5,
			6, 7, 5, 6, 7, 6, 7, 7
		};

		/// <summary>8x8 diagonal scan, Y coordinates</summary>
		public static readonly byte[] diagonalScan_8x8_y = new byte[ 64 ]
		{
			0, 1, 0, 2, 1, 0, 3, 2,
			1, 0, 4, 3, 2, 1, 0, 5,
			4, 3, 2, 1, 0, 6, 5, 4,
			3, 2, 1, 0, 7, 6, 5, 4,
			3, 2, 1, 0, 7, 6, 5, 4,
			3, 2, 1, 7, 6, 5, 4, 3,
			2, 7, 6, 5, 4, 3, 7, 6,
			5, 4, 7, 6, 5, 7, 6, 7
		};
	}
}